{"version":3,"file":"component---src-templates-all-products-tsx-d38d0abd73050ea7b458.js","mappings":"gJA+BA,IA3Ba,SAACA,GACZ,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,QACbD,EAAAA,cAACE,EAAAA,cAAD,CACCC,IAAKJ,EAAMK,MACXC,IAAKN,EAAMO,KACXC,MAAO,CAAEC,OAAQ,SACjBP,UAAU,kCAEXD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACfD,EAAAA,cAAAA,IAAAA,CAAGS,KAAMV,EAAMW,YAAaT,UAAU,aAAaF,EAAMY,UACzDX,EAAAA,cAAAA,IAAAA,CAAGS,KAAMV,EAAMa,SAAUX,UAAU,aAAaF,EAAMc,OAEpDb,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,cAAcF,EAAMO,OAEpCN,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,0BACbD,EAAAA,cAAAA,IAAAA,CAAGc,OAAO,SAASb,UAAU,kBAAkBQ,KAAMV,EAAMgB,eAA3D,eAGAf,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,8BAA8BQ,KAAMV,EAAMiB,KAAvD,iBAnBR,C,gHCqBA,EAjBmB,SAACjB,GAClB,OACEC,EAAAA,cAAAA,MAAAA,CAAK,aAAW,2BACdA,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,cACXgB,MAAMC,KAAK,CAACC,OAAOpB,EAAMqB,gBAAgB,SAACC,EAAGC,GAAJ,OAEtCtB,EAAAA,cAAAA,KAAAA,CAAIC,UAAS,cAAeqB,IAAIvB,EAAMwB,YAAc,EAAI,SAAW,KACjEvB,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,YAAYQ,KAASV,EAAMyB,IAAX,KAAuB,IAALF,EAAS,GAAKA,EAAE,IAC5DA,EAAE,GAJV,KAJT,EC4DA,EArDoB,SAACG,GACnB,OACEzB,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAC0B,EAAAA,EAAD,MACA1B,EAAAA,cAAC2B,EAAAA,EAAD,CAAMC,MAAM,iBAEZ5B,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,kBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAAA,KAAAA,KAAAA,kBAGJA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAC6B,EAAD,CAAYN,YAAaE,EAAKK,YAAYP,YAAaH,cAAeK,EAAKK,YAAYV,cAAeI,IAAKC,EAAKK,YAAYN,QAGhIxB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,oCACZwB,EAAKA,KAAKM,YAAYC,MAAMC,KAAI,SAACC,GAAD,OAC/BlC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAACmC,EAAAA,EAAD,CACE7B,KAAM4B,EAAK5B,KACXF,MAAO8B,EAAK9B,MACZW,cAAemB,EAAKnB,cACpBC,IAAKkB,EAAKlB,IACVL,SAAUuB,EAAKvB,SACfD,YAAawB,EAAKxB,YAClBG,MAAOqB,EAAKrB,MACZD,SAAUsB,EAAKtB,WAVpB,KAeHZ,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAC6B,EAAD,CAAYN,YAAaE,EAAKK,YAAYP,YAAaH,cAAeK,EAAKK,YAAYV,cAAeI,IAAKC,EAAKK,YAAYN,SAnCxI,C","sources":["webpack://the-collectibles/./src/components/Card.tsx","webpack://the-collectibles/./src/components/Pagnation.tsx","webpack://the-collectibles/./src/templates/AllProducts.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { DataNode } from \"../models/Types\";\n\nconst Card = (props: DataNode) => {\n  return (\n    <div className=\"card\">\n      <LazyLoadImage\n       src={props.Image}\n       alt={props.Name}\n       style={{ height: \"200px\" }}\n       className=\"rounded mx-auto d-block-fluid\"\n      />\n      <div className=\"card-body\">\n      <a href={props.CategoryUrl} className=\"card-link\">{props.Category}</a>\n      <a href={props.BrandUrl} className=\"card-link\">{props.Brand}</a>\n      \n        <h5 className=\"card-title\">{props.Name}</h5>\n      </div>\n      <div className=\"card-footer text-muted\">\n        <a target=\"_blank\" className=\"btn btn-primary\" href={props.AffiliateLink}>\n          Buy Product\n        </a>\n        <a className=\"btn btn-secondary float-end\" href={props.Url}>\n          View Product\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import * as React from \"react\";\n\ntype PaginationProps = {\n  currentPage: number;\n  numberOfPages: number;\n  url: string;\n};\n\nconst Pagination = (props: PaginationProps) => {\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination\">\n        {Array.from({length:props.numberOfPages}, (_, i) => (\n          \n            <li className={`page-item ${i===props.currentPage - 1 ? \"active\" : \"\"}`}>\n              <a className=\"page-link\" href={`${props.url}/${i ===0 ? \"\" : i+1}`}>\n                {i+1}\n              </a>\n            </li>\n        ))}\n      </ul>\n    </nav>\n  )\n};\n\nexport default Pagination;\n","import * as React from \"react\";\nimport { PageProps, graphql } from \"gatsby\";\nimport NavBar from \"../components/NavBar\";\nimport Head from \"../components/Head\";\nimport { data, DataNode } from \"../models/Types\";\nimport Card from \"../components/Card\";\nimport Pagination from \"../components/Pagnation\";\n\n\ntype productContext = {\n  currentPage: number\n  numberOfPages: number\n  url: string\n};\n\nconst AllProducts = (data: PageProps<data, productContext>) => {\n  return (\n    <main>\n      <NavBar></NavBar>\n      <Head title=\"All Products\"></Head>\n\n      <div className=\"container my-4\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h1>All Products</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <Pagination currentPage={data.pageContext.currentPage} numberOfPages={data.pageContext.numberOfPages} url={data.pageContext.url}></Pagination>\n          </div>\n        </div>\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n          {data.data.allDataJson.nodes.map((item) => (\n            <div className=\"col\">\n              <Card\n                Name={item.Name}\n                Image={item.Image}\n                AffiliateLink={item.AffiliateLink}\n                Url={item.Url}\n                Category={item.Category}\n                CategoryUrl={item.CategoryUrl}\n                Brand={item.Brand}\n                BrandUrl={item.BrandUrl}\n              ></Card>\n            </div>\n          ))}\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <Pagination currentPage={data.pageContext.currentPage} numberOfPages={data.pageContext.numberOfPages} url={data.pageContext.url}></Pagination>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport const query = graphql`\n  query allProductsQuery($skip: Int!, $limit: Int!) {\n        allDataJson(limit: $limit, skip: $skip) {\n          nodes {\n            ...Product\n          }\n        }      \n  }\n`;\n\nexport default AllProducts;\n"],"names":["props","React","className","LazyLoadImage","src","Image","alt","Name","style","height","href","CategoryUrl","Category","BrandUrl","Brand","target","AffiliateLink","Url","Array","from","length","numberOfPages","_","i","currentPage","url","data","NavBar","Head","title","Pagination","pageContext","allDataJson","nodes","map","item","Card"],"sourceRoot":""}