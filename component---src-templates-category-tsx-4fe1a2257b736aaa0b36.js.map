{"version":3,"file":"component---src-templates-category-tsx-4fe1a2257b736aaa0b36.js","mappings":"gJA+BA,IA3Ba,SAACA,GACZ,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,QACbD,EAAAA,cAACE,EAAAA,cAAD,CACCC,IAAKJ,EAAMK,MACXC,IAAKN,EAAMO,KACXC,MAAO,CAAEC,OAAQ,SACjBP,UAAU,kCAEXD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACfD,EAAAA,cAAAA,IAAAA,CAAGS,KAAMV,EAAMW,YAAaT,UAAU,aAAaF,EAAMY,UACzDX,EAAAA,cAAAA,IAAAA,CAAGS,KAAMV,EAAMa,SAAUX,UAAU,aAAaF,EAAMc,OAEpDb,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,cAAcF,EAAMO,OAEpCN,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,0BACbD,EAAAA,cAAAA,IAAAA,CAAGc,OAAO,SAASb,UAAU,kBAAkBQ,KAAMV,EAAMgB,eAA3D,eAGAf,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,8BAA8BQ,KAAMV,EAAMiB,KAAvD,iBAnBR,C,0EC+CA,UA3CqB,SAACC,GACpB,OACEjB,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAACkB,EAAAA,EAAD,MACAlB,EAAAA,cAACmB,EAAAA,EAAD,CAAMC,MAAOH,EAAKI,YAAYV,WAE9BX,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,kBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAAA,KAAAA,KAAKiB,EAAKI,YAAYV,YAG1BX,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,oCACZgB,EAAKA,KAAKK,YAAYC,MAAMC,KAAI,SAACC,GAAD,OAC/BzB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAC0B,EAAAA,EAAD,CACEpB,KAAMmB,EAAKnB,KACXF,MAAOqB,EAAKrB,MACZW,cAAeU,EAAKV,cACpBC,IAAKS,EAAKT,IACVL,SAAUc,EAAKd,SACfD,YAAae,EAAKf,YAClBG,MAAOY,EAAKZ,MACZD,SAAUa,EAAKb,WAVpB,MAbX,C","sources":["webpack://the-collectibles/./src/components/Card.tsx","webpack://the-collectibles/./src/templates/Category.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { DataNode } from \"../models/Types\";\n\nconst Card = (props: DataNode) => {\n  return (\n    <div className=\"card\">\n      <LazyLoadImage\n       src={props.Image}\n       alt={props.Name}\n       style={{ height: \"200px\" }}\n       className=\"rounded mx-auto d-block-fluid\"\n      />\n      <div className=\"card-body\">\n      <a href={props.CategoryUrl} className=\"card-link\">{props.Category}</a>\n      <a href={props.BrandUrl} className=\"card-link\">{props.Brand}</a>\n      \n        <h5 className=\"card-title\">{props.Name}</h5>\n      </div>\n      <div className=\"card-footer text-muted\">\n        <a target=\"_blank\" className=\"btn btn-primary\" href={props.AffiliateLink}>\n          Buy Product\n        </a>\n        <a className=\"btn btn-secondary float-end\" href={props.Url}>\n          View Product\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import * as React from \"react\";\nimport { PageProps, graphql } from \"gatsby\";\nimport NavBar from \"../components/NavBar\";\nimport Head from \"../components/Head\";\nimport { data, DataNode } from \"../models/Types\";\nimport Card from \"../components/Card\";\n\n\nconst CategoryPage = (data: PageProps<data, DataNode>) => {\n  return (\n    <main>\n      <NavBar></NavBar>\n      <Head title={data.pageContext.Category}></Head>\n\n      <div className=\"container my-4\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h1>{data.pageContext.Category}</h1>\n          </div>\n        </div>\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n          {data.data.allDataJson.nodes.map((item) => (\n            <div className=\"col\">\n              <Card\n                Name={item.Name}\n                Image={item.Image}\n                AffiliateLink={item.AffiliateLink}\n                Url={item.Url}\n                Category={item.Category}\n                CategoryUrl={item.CategoryUrl}\n                Brand={item.Brand}\n                BrandUrl={item.BrandUrl}\n              ></Card>\n            </div>\n          ))}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport const query = graphql`\n  query Category($Category: String) {\n    allDataJson(filter: { Category: { eq: $Category } }) {\n      nodes {\n        ...Product\n      }\n    }\n  }\n`;\n\nexport default CategoryPage;\n"],"names":["props","React","className","LazyLoadImage","src","Image","alt","Name","style","height","href","CategoryUrl","Category","BrandUrl","Brand","target","AffiliateLink","Url","data","NavBar","Head","title","pageContext","allDataJson","nodes","map","item","Card"],"sourceRoot":""}